// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// PermsColumns holds the columns for the "perms" table.
	PermsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "perm_group", Type: field.TypeUUID, Nullable: true},
	}
	// PermsTable holds the schema information for the "perms" table.
	PermsTable = &schema.Table{
		Name:       "perms",
		Columns:    PermsColumns,
		PrimaryKey: []*schema.Column{PermsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "perms_perm_groups_group",
				Columns:    []*schema.Column{PermsColumns[4]},
				RefColumns: []*schema.Column{PermGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PermGroupsColumns holds the columns for the "perm_groups" table.
	PermGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
	}
	// PermGroupsTable holds the schema information for the "perm_groups" table.
	PermGroupsTable = &schema.Table{
		Name:       "perm_groups",
		Columns:    PermGroupsColumns,
		PrimaryKey: []*schema.Column{PermGroupsColumns[0]},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "color", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:       "roles",
		Columns:    RolesColumns,
		PrimaryKey: []*schema.Column{RolesColumns[0]},
	}
	// UserPermsColumns holds the columns for the "user_perms" table.
	UserPermsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "perm_id", Type: field.TypeUUID},
	}
	// UserPermsTable holds the schema information for the "user_perms" table.
	UserPermsTable = &schema.Table{
		Name:       "user_perms",
		Columns:    UserPermsColumns,
		PrimaryKey: []*schema.Column{UserPermsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_perms_perms_user_perms",
				Columns:    []*schema.Column{UserPermsColumns[4]},
				RefColumns: []*schema.Column{PermsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userperm_perm_id_user_id",
				Unique:  true,
				Columns: []*schema.Column{UserPermsColumns[4], UserPermsColumns[1]},
			},
		},
	}
	// UserRolesColumns holds the columns for the "user_roles" table.
	UserRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "role_id", Type: field.TypeUUID},
	}
	// UserRolesTable holds the schema information for the "user_roles" table.
	UserRolesTable = &schema.Table{
		Name:       "user_roles",
		Columns:    UserRolesColumns,
		PrimaryKey: []*schema.Column{UserRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_roles_roles_user_roles",
				Columns:    []*schema.Column{UserRolesColumns[4]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userrole_role_id_user_id",
				Unique:  true,
				Columns: []*schema.Column{UserRolesColumns[4], UserRolesColumns[1]},
			},
		},
	}
	// RolePermsColumns holds the columns for the "role_perms" table.
	RolePermsColumns = []*schema.Column{
		{Name: "role_id", Type: field.TypeUUID},
		{Name: "perm_id", Type: field.TypeUUID},
	}
	// RolePermsTable holds the schema information for the "role_perms" table.
	RolePermsTable = &schema.Table{
		Name:       "role_perms",
		Columns:    RolePermsColumns,
		PrimaryKey: []*schema.Column{RolePermsColumns[0], RolePermsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_perms_role_id",
				Columns:    []*schema.Column{RolePermsColumns[0]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "role_perms_perm_id",
				Columns:    []*schema.Column{RolePermsColumns[1]},
				RefColumns: []*schema.Column{PermsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		PermsTable,
		PermGroupsTable,
		RolesTable,
		UserPermsTable,
		UserRolesTable,
		RolePermsTable,
	}
)

func init() {
	PermsTable.ForeignKeys[0].RefTable = PermGroupsTable
	UserPermsTable.ForeignKeys[0].RefTable = PermsTable
	UserRolesTable.ForeignKeys[0].RefTable = RolesTable
	RolePermsTable.ForeignKeys[0].RefTable = RolesTable
	RolePermsTable.ForeignKeys[1].RefTable = PermsTable
}
