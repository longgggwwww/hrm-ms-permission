// Code generated by ent, DO NOT EDIT.

package userperm

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the userperm type in the database.
	Label = "user_perm"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldPermID holds the string denoting the perm_id field in the database.
	FieldPermID = "perm_id"
	// Table holds the table name of the userperm in the database.
	Table = "user_perms"
)

// Columns holds all SQL columns for userperm fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldPermID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	UserIDValidator func(string) error
)

// OrderOption defines the ordering options for the UserPerm queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUserID orders the results by the user_id field.
func ByUserID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserID, opts...).ToFunc()
}

// ByPermID orders the results by the perm_id field.
func ByPermID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPermID, opts...).ToFunc()
}
